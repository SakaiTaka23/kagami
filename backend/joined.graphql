type Follow {
  followerId: String!
  followingId: String!
}

type Query {
  isFollowing(userName: String!): Boolean!
  timeline(take: Int!, cursor: String): [Post!]!
  postUser(userName: String!, take: Int!, cursor: String): [Post!]!
  postDetail(id: String!, userName: String!): Post
  postsFromTag(tag: String!, take: Int!, cursor: String): [Post!]!
  templateDetail(id: String!): Template
  templateList(take: Int!, cursor: String): [Template!]!
  templateUser(userName: String!, take: Int!, cursor: String): [Template!]!
  userFromToken: User!
  userFromUserName(userName: String!): User
  user(id: String!): User
}

type Mutation {
  followToggle(userName: String!): Follow!
  postCreate(content: String!): Post!
  createTemplate(template: CreateTemplateInput): Template!
  createUser(username: UserName!): User!
  updateUserProfile(profileEditInput: ProfileEditInput!): User!
}

type Post {
  id: String!
  content: String!
  createdAt: Date!
  user: User!
  userId: String!
}

scalar Date

input CreateTemplateInput {
  content: String!
  detail: String!
}

type Template {
  id: String!
  content: String!
  createdAt: Date!
  detail: String!
  updatedAt: Date!
  user: User!
  userId: String!
}

type User {
  id: String!
  accountName: String!
  userName: String!
  profile: String!
}

input UserName {
  accountName: String!
  userName: String!
}

input ProfileEditInput {
  accountName: String!
  profile: String!
}

schema {
  query: Query
  mutation: Mutation
}